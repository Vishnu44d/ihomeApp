{"version":3,"sources":["components/spinner/Spin.jsx","_services/userService/auth.js","conf/index.js","_services/userService/user.js","components/toast/Toast.jsx","actions/index.js","components/pages/Login.jsx","components/pages/NavBar.jsx","components/pages/Footer.jsx","components/slider/Range.jsx","_services/dataService/importData.js","components/box/Box.jsx","components/Charts/lineChart.jsx","_services/deviceService/getDeviceData.js","components/card/AboutCard.jsx","CONSTANTS/Durations/Duration.js","components/dropdown/DropMenu.jsx","layouts/Devices.jsx","components/toggle/Switch.jsx","components/tables/Tables.jsx","_services/deviceService/getAllDevice.js","layouts/Dashbord.jsx","components/input/MyInput.jsx","components/tables/editTable.jsx","layouts/EditDash.jsx","protectedRoute.js","unProtectedRoute.js","App.js","serviceWorker.js","reducers/index.js","sagas/index.js","store/index.js","index.js"],"names":["Spin","props","state","size","Spinner","this","type","color","lastColor","Component","authenticated","cb","urls","dev_url","base_url","logout","localStorage","removeItem","handleResponse","response","text","then","data","JSON","parse","console","log","ok","status","message","error","statusText","Promise","reject","userService","login","username","password","requestOptions","method","headers","body","stringify","fetch","user","authdata","window","btoa","setItem","token","email","catch","e","signup","Toast","notify","toast","msg","setToken","setFreq","freq","setMyDuration","duration","Login","submitted","loading","isSuccess","handleChange","bind","handleLogin","target","name","value","setState","preventDefault","auth","history","push","style","minHeight","height","className","Container","Row","Col","md","CardGroup","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","icon","Input","placeholder","autoComplete","onChange","xs","Button","disabled","onClick","connect","isLoggedIn","dispatch","NavBar","isOpen","btnDropleft","isOpenProfile","devices","toggle","handleLogout","nextProps","logoutAction","isAuthenticated","Navbar","light","expand","marginBottom","to","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","length","DropdownItem","map","item","index","key","NavbarText","Dropdown","direction","Footer","marginTop","Range","rangeValue","currentValue","device","new_intensity","json","resp","l","label","CustomInput","min","max","inline","width","padding","id","Badge","paddingLeft","getLatestData","a","getMedata","d","time","dd","last","getData","getRangeData","i","Date","Box","ChartsPage","f","my_freq","my_duration","labels","title","device_id","clearInterval","interval","init_data","res","setInterval","concat","new_l","new_d","shift","database","dataLine","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","options","responsive","animation","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","React","getDataOf","AboutCard","inverse","CardTitle","CardText","about","shortdurations","disp","longdurations","shortfrequency","longfrequency","DropMenu","purpose","handleClick","val","paddingRight","header","divider","Devices","device_name","monitoring","location","Graphlabel","graphName","err_msg","pathname","split","r","min_intensity","max_intensity","desc","cur_intensity","unlisten","listen","action","sm","parseInt","Switch","operation","checked","MyTable","Table","dark","getMyDevices","payload","Dashbord","setDevices","Tables","MyInput","n","handleSave","class","EditTable","handleEdit","port","EditDashbord","ProtectedRoute","component","rest","render","from","UnProtectedRoute","App","toString","path","exact","Boolean","hostname","match","allReducers","combineReducers","rootSaga","all","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","rootSage","configStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43963099.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport default class Spin extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            size: this.props.size\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Spinner size={this.state.size} type=\"grow\" color=\"danger\" /> \n                <Spinner size={this.state.size} type=\"grow\" color=\"warning\" />\n                <Spinner size={this.state.size} type=\"grow\" color={this.props.lastColor} /> \n            </div>\n        )\n    }\n}\n","class Auth {\n    constructor() {\n      this.authenticated = false;\n    }\n  \n    login(cb) {\n      this.authenticated = true;\n      cb();\n    }\n  \n    logout(cb) {\n      this.authenticated = false;\n      cb();\n    }\n  \n    isAuthenticated() {\n        //return true;\n      return this.authenticated;\n    }\n  }\n  \n  export default new Auth();","const urls = {\n  dev_url: \"http://3.19.76.57:8080/\",\n};\n\nexport default urls;\n","import urls from './../../conf';\n\nvar base_url = urls.dev_url;\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n            \"email\": username, \n            \"password\": password\n        })\n    };\n    \n    return fetch(`${base_url}user/login`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a user in the response\n            if (user) {\n                // store user details and basic auth credentials in local storage \n                // to keep user logged in between page refreshes\n                user.authdata = window.btoa(username + ':' + password);\n                //localStorage.setItem('user', JSON.stringify(user));\n                localStorage.setItem('token', user.token);\n                localStorage.setItem('email', user.email);\n                //console.log(\"Success!!\")\n            }\n\n            return user;\n        }).catch((e) => {return ({'status':'fail', 'message': 'Connection refused'})});\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('teacher');\n    localStorage.removeItem('email');\n    \n    \n}\n\nfunction signup(data) {\n    //console.log(data);\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    };\n\n    return fetch(`${base_url}user/register`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login successful if there's a user in the response\n            if (user) {\n                // store user details and basic auth credentials in local storage \n                // to keep user logged in between page refreshes\n                //user.authdata = window.btoa(username + ':' + password);\n                //localStorage.setItem('user', JSON.stringify(user));\n                //localStorage.setItem('token', user.token);\n                console.log(\"Success!!\")\n            }\n\n            return user;\n        }).catch((e) => {return ({'status':'fail', 'message': 'Connection refused'})});\n}\n\nconst userService = {\n    login,\n    logout,\n    signup\n};\n\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        console.log(data)\n        if (!response.ok) {\n            if (response.status === 400) {\n                // auto logout if 401 response returned from api\n                logout();\n                console.log(data.message);\n                //location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n\n\nexport default userService;","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Toast extends Component {\n    constructor(props){\n        super(props);\n        let msg = this.props.msg;\n        this.state = {\n            msg: msg\n        }\n    }\n    componentDidMount(){\n        this.notify();\n    }\n    notify = () => toast(this.state.msg);\n    render() {\n        return (\n            <ToastContainer />                \n        )\n    }\n}\n","\nconst setToken = (token) => ({\n    type: \"LOGIN\",\n    token,\n})\nconst setDevices = (device) => ({\n    type: \"DEVICE\",\n    device,\n})\n\nconst setFreq = (freq) => ({\n    type: \"FREQ\",\n    freq,\n})\n\nconst setMyDuration = (duration) => ({\n    type: \"DURATION\",\n    duration\n})\n\nconst logoutAction = () => ({\n    type: 'LOGOUT'\n})\n\nexport {setToken, setFreq, setMyDuration, logoutAction, setDevices};","import React, { Component } from 'react';\nimport { MDBIcon } from \"mdbreact\";\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport Spin from './../spinner/Spin';\nimport auth from './../../_services/userService/auth';\nimport userService from './../../_services/userService/user';\nimport Toast from './../toast/Toast';\n\nimport { connect } from 'react-redux';\nimport {setToken} from './../../actions';\n\nclass Login extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      submitted: false,\n      error: '',\n      loading: false,\n      isSuccess: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    \n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n\n  handleLogin(e) {\n    e.preventDefault();\n    console.log(this.state)\n    const { username, password } = this.state;\n    if (!(username && password)) {\n        return;\n    }\n\n    this.setState({ loading: true });\n    userService.login(username, password)\n      .then(\n        user => {\n            if(user.status === 'fail')\n                this.setState({ error: user.message, loading: false, isSuccess:false });\n            else{\n                this.props.setToken(user.token);\n                this.setState({isSuccess:true});\n                auth.login(() => {\n                    this.props.history.push(\"/dashbord/\");\n                });\n            }\n        },\n    );\n    \n    console.log(this.state.error);\n    this.setState({isSuccess:true})\n  }\n  render() {\n    const { username, password, submitted, loading, error } = this.state;\n    return (\n      <div style={{minHeight: \"1vh\", height:\"100%\"}}>\n      <div className=\"app flex-row align-items-center align-middle justify-content-center\">\n        <Container className=\"justify-content-center\">\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                          <MDBIcon icon=\"user-alt\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" placeholder=\"Username\" autoComplete=\"username\" name=\"username\" value={username} onChange={this.handleChange}/>\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                          <MDBIcon icon=\"key\" />\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" name=\"password\" value={password} onChange={this.handleChange}/>\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button className=\"px-4 grey darken-3\" disabled={loading} onClick={this.handleLogin}>\n                            \n                            {loading ?\n                              <Spin size=\"sm\" />\n                              :\n                              \"Login\"\n                            }\n                            \n                          \n                          </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          \n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"text-white grey darken-3 py-5 d-md-down-none\">\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Welcome to ihome</h2>\n                      <p>Get in touch with the creator of the app to get your admin id and password</p>\n                      \n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n        {\n          this.state.isSuccess===true?<div></div>:\n          <Toast msg={error}/>\n        }\n        \n      </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({isLoggedIn, token }) => ({\n  isLoggedIn,\n  token\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (token) => dispatch(setToken(token))\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);","import React, { Component } from 'react';\nimport { MDBIcon } from \"mdbreact\";\nimport {Dropdown} from 'reactstrap';\nimport auth from './../../_services/userService/auth';\nimport Spin from './../spinner/Spin';\nimport userService from './../../_services/userService/user';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\n\nimport { connect } from 'react-redux';\nimport {setToken, logoutAction} from './../../actions';\n\nclass NavBar extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isOpen: false,\n      btnDropleft: false,\n      isOpenProfile: false,\n      loading: false,\n      logout: false,\n      devices: []\n    }\n    this.toggle = this.toggle.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  \n  componentWillReceiveProps(nextProps){\n    console.log(nextProps);\n    if (nextProps.isLoggedIn && nextProps !== null){\n      //console.log(\"calling from navbar \", getMyDevices(nextProps.token))\n      console.log(\"Calling from Nav After props\")\n      this.setState({devices: nextProps.devices});\n    }\n  }\n  \n\n  handleLogout(e){\n    e.preventDefault()\n    userService.logout();\n    this.props.logoutAction();\n    auth.logout(()=>{\n      //this.context.history.push('/')\n      this.setState({logout:true, devices:[]})\n      this.props.history.push(\"/\");\n    })\n    \n    console.log(\"Logout \", this.state.logout)\n    console.log(\"isAuth \", auth.isAuthenticated())\n  }\n  toggle(){\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render(){\n    const isOpen = this.state.isOpen;\n    const isOpenProfile = this.state.btnDropleft;\n    const loading = this.state.loading;\n    \n    return (\n      <div>\n        <Navbar className=\"grey darken-3\" light expand=\"md\" style={{marginBottom: \"50px\"}}>\n        <Link to=\"/\"><NavbarBrand href=\"/\" className=\"text-white\">iHome</NavbarBrand></Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={isOpen} navbar className=\"text-white\">\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem>\n              <Link to=\"/dashbord\"><NavLink className=\"text-white\">Dashboard</NavLink></Link>\n              </NavItem>\n              <NavItem>\n              <Link to=\"/editdevices\"><NavLink className=\"text-white\">Edit</NavLink></Link>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"\" className=\"text-white\">GitHub</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret className=\"text-white\">\n                  Devices\n                </DropdownToggle>\n                <DropdownMenu right className=\"text-white\">\n                  {\n                    this.state.devices.length === 0?\n                      <DropdownItem>\n                        No device.\n                      </DropdownItem>:\n                    this.state.devices.map((item, index)=>{\n                      return (\n                        <DropdownItem key={index}>\n                          <Link to={`/devices/${item.name}`}><span>{item.name}</span></Link>\n                        </DropdownItem>\n\n                      )\n                    })\n                  }\n                  {\n                    /*\n                  <DropdownItem>\n                    Option 2\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem>\n                  */\n                  }\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>\n              {\n                auth.isAuthenticated()?\n                    <Dropdown direction=\"left\" isOpen={isOpenProfile} toggle={() => { this.setState({ btnDropleft: !this.state.btnDropleft }); }}>\n                    <DropdownToggle color=\"light\" caret>\n                      <MDBIcon icon=\"user-alt\" />\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem ><Link to=\"/profile\"><span className=\"text-black\">View Profile</span></Link></DropdownItem>\n                      <DropdownItem>\n                        <Button to=\"/\" className=\"px-4 grey darken-3\" disabled={loading} onClick={this.handleLogout}> \n                          {loading ?\n                            <Spin size=\"sm\" />\n                            :\n                            <span className=\"text-white\">Logout</span>\n                          }\n                        </Button>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown> :\n                  <p></p>\n\n              }\n              \n              \n            </NavbarText>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n    }\n}\n\nconst mapStateToProps = ({isLoggedIn, token, devices }) => ({\n  isLoggedIn,\n  token,\n  devices,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (token) => dispatch(setToken(token)),\n  logoutAction: () => dispatch(logoutAction())\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavBar);","import React, { Component } from 'react'\n\nclass Footer extends Component {\n    render() {\n        return (\n                <footer className=\"page-footer font-small grey darken-3 \" style={{marginTop: \"50px\"}}>\n\n                <div className=\"container\">\n\n                    <div className=\"row\">\n\n                    <div className=\"col-md-12 py-5\">\n                        <div className=\"mb-5 flex-center\">\n\n                        <a className=\"fb-ic\">\n                            <i className=\"fab fa-facebook-f fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n                        </a>\n\n                        <a className=\"tw-ic\">\n                            <i className=\"fab fa-twitter fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n                        </a>\n                        <a className=\"gplus-ic\">\n                            <i className=\"fab fa-google-plus-g fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n                        </a>\n                        <a className=\"li-ic\">\n                            <i className=\"fab fa-linkedin-in fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n                        </a>\n                        <a className=\"ins-ic\">\n                            <i className=\"fab fa-instagram fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n                        </a>\n\n                        <a className=\"pin-ic\">\n                            <i className=\"fab fa-pinterest fa-lg white-text fa-2x\"> </i>\n                        </a>\n                        </div>\n                    </div>\n\n\n                    </div>\n\n\n                </div>\n\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                    <a href=\"/\"> ihome</a>\n                </div>\n\n\n                </footer>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { CustomInput, Badge, InputGroup, InputGroupAddon, Button } from 'reactstrap';\nimport { MDBContainer } from \"mdbreact\";\nimport urls from './../../conf';\n\nimport { connect } from 'react-redux';\n\nvar base_url = urls.dev_url;\n\nclass Range extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            rangeValue:this.props.data.currentValue,\n            loading: false,\n            name: this.props.data.device\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentWillReceiveProps(){\n        this.setState({\n            rangeValue: this.props.data.currentValue\n        })\n    }\n    handleChange(e){\n        e.preventDefault();\n        let new_intensity = e.target.value;\n        const { name, value } = e.target;\n        //console.log(this)\n        this.setState({ [name]: value });\n        this.setState({loading:true});\n        \n        //Network call for changing intensity here...\n        console.log(new_intensity);\n        console.log(this.props.data.device);\n        fetch(`${base_url}device/intensity`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                \"device_name\": this.props.data.device,\n                \"token\": this.props.token,\n                \"intensity\": new_intensity\n            })\n        }).then(response => response.json()).then(resp => {\n            // console.log(resp.message)\n            if(resp.message===\"published\"){\n                // console.log(\"published\")\n            }\n            else{\n                let l = this.state.status ? \"OFF\": \"ON\";\n                this.setState({\n                    status: !this.state.status,\n                    label: l\n                })\n            }\n            this.setState({\n                loading:false\n            })\n        })     \n    }\n    render() {\n        \n        return (\n            <div>\n            <p className=\"text-center\">Slide the slider to increase/decrease the intensity.</p>\n            <MDBContainer className=\"d-flex justify-content-right\">\n                \n            <InputGroup size=\"sm\">\n                \n                <CustomInput type=\"range\" min={this.props.data.min} max={this.props.data.max} value={this.state.rangeValue} onChange={this.handleChange} name=\"rangeValue\" inline \n                    style={{width: \"62%\", padding:\"1rem\"}}\n                    id=\"\"\n                    disabled={this.state.loading}\n                />\n                <InputGroupAddon addonType=\"append\"><Button color=\"dark\"><Badge color=\"light\">{this.state.rangeValue}</Badge><span style={{paddingLeft:\"5px\"}}>SET</span></Button></InputGroupAddon>\n            </InputGroup>\n            </MDBContainer>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = ({token }) => ({\n    token,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    \n  })\n  \n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Range);\n","import urls from './../../conf';\nvar base_url = urls.dev_url;\n\n\nconst getLatestData = async (id, token) => fetch(`${base_url}device/getlatestdata`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ \n        \"id\": id,\n        \"token\": token\n    })\n}).then(response => response.json())\n\nconst getMedata = async (id, token) => {\n    const data = await getLatestData(id, token);\n    let d = data.data[0];\n    console.log(d);\n    let l = d.time\n    let dd = d.last\n    return {\n        label: l,\n        data: dd,\n    }\n}\n\n\nconst getData = async (id, duration, token) => fetch(`${base_url}device/getrangedata`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ \n        \"id\": id,\n        \"duration\": duration,\n        \"token\": token\n    })\n}).then(response => response.json())\n\nconst getRangeData = async (id, duration, token) => {\n    console.log(duration);\n    const data = await getData(id, duration, token);\n    let d = data.data;\n    console.log(data);\n    let l = []\n    let dd = []\n    for(let i=0; i<d.length; i++){\n        let item = d[i];\n        l.push(new Date(item.time));\n        dd.push(item.value);\n    }\n    console.log(l);\n    console.log(dd);\n    return {\n        label: l,\n        data: dd,\n    }\n}\n\n\nexport {getRangeData, getMedata}","import React, { Component } from 'react'\n\nexport default class Box extends Component {\n    render() {\n        return (\n            <div style={{minHeight: this.props.size}}>\n                \n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\nimport {getMedata} from './../../_services/dataService/importData';\n\n\nimport Box from './../box/Box';\n\n\nimport { connect } from 'react-redux';\nimport {setFreq, setMyDuration} from './../../actions';\n\nclass ChartsPage extends React.Component {\n    \n    constructor(props){\n        super(props);\n        const f = this.props.my_freq;\n        const i = this.props.my_duration;\n        this.state = {\n          labels:[],\n          data:[],\n          name: this.props.title,\n          device_id: this.props.device_id,\n          freq: f,\n          duration: i,\n        }    \n    }\n\n    componentWillUnmount(){\n      clearInterval(this.interval);\n    }\n    \n    componentWillReceiveProps({my_freq, my_duration, init_data, device_id}){\n      \n      //console.log(this.state);\n      //console.log(\"INSIDE RECV \", device_id)\n      this.setState({\n        labels:[],\n        data:[],\n        device_id: device_id\n      })\n\n      const f = my_freq;\n      const i = my_duration;\n\n      //console.log(\"I recieved f and duration as \", f, i);\n\n      this.setState({\n        freq: f,\n        duration: i,\n      })\n\n      let res = init_data\n      //console.log(\"Chart Mount I recieved \", res);\n      this.setState({\n        labels: res.label,\n        data: res.data,\n        \n      })\n\n      \n      clearInterval(this.interval);\n      //console.log(\"OUT INTERVAL STATE:: \", this.state.labels);\n      //console.log(\"OUT INTERVAL RECV:: \", init_data.label);\n      //console.log(\"OUTSIDE INTERVAL::\", my_freq)\n      this.interval = setInterval(() => {\n        //console.log(\"INSIDE INTERVAL:: \",my_freq)\n        //console.log(\"INSIDE INTERVAL:: \", this.state.labels);\n        getMedata(device_id, this.props.token).then(res => {\n          this.setState(\n          { \n              labels: this.state.labels.concat([res.label]),\n              data: this.state.data.concat([res.data])\n          })\n        })\n        \n        let new_l = [...this.state.labels];\n        let new_d = [...this.state.data];\n        new_l.shift();\n        new_d.shift();\n        this.setState(\n          { \n              labels: new_l,\n              data: new_d\n          })\n\n          //clearInterval(this.interval);\n          //this.interval = setInterval(cb, this.state.freq);\n          \n    }, my_freq*1000 \n    );\n    }\n    \n\n    componentDidMount() {\n      //console.log(this.props.device_id)\n      this.setState({id: this.props.device_id})\n      //console.log(\"FROM THE CHART \", this.state.device_id);\n    }\n  componentWillMount(){\n    \n    \n  }\n\n  render() {\n    let database = {\n      dataLine: {\n      labels: this.state.labels,\n      datasets: [\n          {\n          label: this.props.label,\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: \"rgba(184, 185, 210, .3)\",\n          borderColor: \"rgb(35, 206, 6)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgb(35, 26, 136)\",\n          pointBackgroundColor: \"rgb(255, 255, 255)\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 1,\n          pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\n          pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: this.state.data\n          }\n      ]\n      }\n    };\n\n\n    const options = {\n      responsive: true, \n      animation: {duration: 0},\n      scales: {\n        xAxes: [{\n            type: 'time',\n            display: true,\n            scaleLabel: {\n                display: true,\n                labelString: \"Time\",\n            }\n        }],\n        yAxes: [{\n            ticks: {\n                beginAtZero: true,\n            },\n            display: true,\n            scaleLabel: {\n                display: true,\n                labelString: \"temp in degree c\",\n            }\n        }]\n    }\n    }\n    \n    return (\n        <MDBContainer>\n          \n          <Box size=\"30px\"></Box>\n        \n        \n        <Line data={database.dataLine} options={options} />\n        </MDBContainer>\n\n    );\n  }\n}\n\nconst mapStateToProps = ({freq, duration, token }) => ({\n  freq,\n  duration,\n  token\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFreq: (freq) => dispatch(setFreq(freq)),\n  setMyDuration: (duration) => dispatch(setMyDuration(duration)),\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartsPage);","\nexport default function getDataOf(name, devices){\n    console.log(name)\n    console.log(devices)\n    for(let i=0; i<devices.length; i++){\n        let item = devices[i]\n        if(item.name===name)\n            return item\n    }\n    return null\n    // devices.map((item, index) => {\n    //     if (item.name === name){\n    //         return item;\n    //     }\n    // })\n    // let res = {\n    //     name: name,\n    //     graphName: \"Temperature v/s time\",\n    //     min: 0,\n    //     max: Math.floor(Math.random() * 100),\n    //     curr_value: Math.floor(Math.random() * 10),\n    //     Graphlabel: \"temp in degree c\",\n    //     about: [\n    //         'Thid device is connected in room 1 and perform the operation',\n    //         'It helps in monitoring and controlling the device'\n    //     ],\n    //     location: \"abcd\"\n    // }\n    // return res;\n}\n","import React, { Component } from 'react';\nimport { Card, CardTitle, CardText } from 'reactstrap';\n\n\nexport default class AboutCard extends Component {\n    \n    render() {\n        return (\n            <div>\n                <Card body inverse className=\"text-center\" style={{ backgroundColor: '#333', borderColor: '#333' }}>\n                    <CardTitle>{this.props.name}</CardTitle>\n                    <CardText className=\"text-left\">\n                        {\n                            this.props.about.map((item, index) => {\n                                return(\n                                <span key={index}>{item}<br/></span> \n                                )\n                            })\n                        }\n                        \n                    </CardText>\n                </Card>\n            </div>\n        )\n    }\n}\n","const shortdurations = [\n    {\n        disp:\"last 1 min\",\n        value: \"1m\"\n    },\n    {\n        disp:\"last 2 min\",\n        value: \"2m\"\n    },\n    {\n        disp:\"last 5 min\",\n        value: \"5m\"\n    },\n    {\n        disp:\"last 15 min\",\n        value: \"24h\"\n    },\n    {\n        disp:\"last 30 min\",\n        value: \"30m\"\n    },\n    {\n        disp:\"last 1 hr\",\n        value: \"1h\"\n    },\n    {\n        disp:\"last 6 hr\",\n        value: \"360 m\"\n    },\n    {\n        disp:\"last 12 hr\",\n        value: \"720 m\"\n    },\n    {\n        disp:\"last 24 hr\",\n        value: \"1400 m\"\n    },\n];\n\nconst longdurations = [\n    {\n        disp:\"last 1 week\",\n        value: \"1 w\"\n    },\n    {\n        disp:\"last 2 week\",\n        value: \"2 w\"\n    },\n    {\n        disp:\"last 1 month\",\n        value: \"1 mo\"\n    },\n    {\n        disp:\"last 6 month\",\n        value: \"6 mo\"\n    },\n    {\n        disp:\"last 1 year\",\n        value: \"6 y\"\n    },\n];\n\nconst shortfrequency = [\n    {\n        disp:\"2 sec\",\n        value: \"2 s\"\n    },\n    {\n        disp:\"5 sec\",\n        value: \"5 s\"\n    },\n    {\n        disp:\"10 sec\",\n        value: \"10 s\"\n    },\n    {\n        disp:\"20 sec\",\n        value: \"20 s\"\n    },\n    {\n        disp:\"60 sec\",\n        value: \"60 s\"\n    },\n]\n\nconst longfrequency = [\n    {\n        disp:\"2 min\",\n        value: \"5 m\"\n    },\n    {\n        disp:\"3 min\",\n        value: \"3 m\"\n    },\n    {\n        disp:\"5 min\",\n        value: \"5 m\"\n    },\n    {\n        disp:\"10 min\",\n        value: \"10 m\"\n    },\n]\n\nexport {shortdurations, longdurations, shortfrequency, longfrequency};","import React, { Component } from 'react';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport {MDBIcon} from 'mdbreact';\n\nimport { connect } from 'react-redux';\nimport {setFreq, setMyDuration} from './../../actions';\n\n\nclass DropMenu extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: this.props.data,\n            purpose: this.props.purpose\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(e){\n        e.preventDefault();\n        let val = e.target.name;\n        //console.log(val);\n        if(this.state.purpose === \"duration\")\n        {\n            this.props.setMyDuration(val)\n            this.setState({\n                data:val\n            })\n\n        }\n        else if(this.state.purpose === \"refresh rate\")\n        {\n            this.props.setFreq(val)\n            this.setState({\n                data:val\n            })\n        }\n    }\n    render() {\n        //console.log(this.props.freq);\n        return (\n            <UncontrolledDropdown >\n                <DropdownToggle color=\"dark\"  caret>\n                    <span style={{paddingRight:\"5px\"}} className=\"text-lowercase\">{this.state.data}</span>\n                    \n                    <MDBIcon icon={this.props.icon} />\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem header>{this.props.purpose}</DropdownItem>\n                    {\n                        this.props.shortdurations.map((item, index)=> {\n                            return (\n                                <DropdownItem key={index} onClick={this.handleClick} name={item.value}>{item.disp}</DropdownItem>\n                            )\n                        })\n                    }\n                    <DropdownItem divider />\n                    {\n                        this.props.longdurations.map((item, index)=> {\n                            return (\n                                <DropdownItem key={index} onClick={this.handleClick} name={item.value}>{item.disp}</DropdownItem>\n                            )\n                        })\n                    }\n                </DropdownMenu>\n            </UncontrolledDropdown>\n        )\n    }\n}\n\n\nconst mapStateToProps = ({freq, duration }) => ({\n    freq,\n    duration\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    setFreq: (freq) => dispatch(setFreq(freq)),\n    setMyDuration: (duration) => dispatch(setMyDuration(duration)),\n  })\n  \n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(DropMenu);\n\n","import React, { Component } from 'react';\nimport {MDBContainer} from 'mdbreact';\nimport Range from './../components/slider/Range';\nimport ChartsPage from './../components/Charts/lineChart';\nimport getDataOf from './../_services/deviceService/getDeviceData';\nimport AboutCard from './../components/card/AboutCard';\nimport Box from './../components/box/Box';\nimport {shortdurations, longdurations, shortfrequency, longfrequency} from './../CONSTANTS/Durations/Duration';\nimport {getRangeData} from './../_services/dataService/importData';\nimport {Col, Row} from 'reactstrap';\nimport DropMenu from './../components/dropdown/DropMenu';\nimport Spin from './../components/spinner/Spin';\nimport Toast from './../components/toast/Toast';\n\nimport { connect } from 'react-redux';\nimport {setFreq, setMyDuration} from './../actions';\n\nclass Devices extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            device_name: \"\",\n            device_id: \"\",\n            min: null,\n            max: null,\n            monitoring: false,\n            currentValue: 0,\n            location: \"\",\n            about: [],\n            Graphlabel: \"\",\n            graphName: \"\",\n            loading: false,\n            init_data: {\n                label:[],\n                data:[]\n            },\n            error: false,\n            err_msg: ''\n\n        }\n    }\n    \n    componentDidMount(){\n        let name = this.props.history.location.pathname.split(\"/\")\n        name = name[2]+\"/\"+name[3]\n\n        let r = getDataOf(name, this.props.devices);\n        if(r===null)\n        {\n            this.setState({error:true, err_msg:\"No such device!\"})\n            console.log(\"r is null\")\n            return;\n        }\n        console.log(r)\n        this.setState({loading:true})\n        this.setState({\n            device_name: name,\n            device_id:r.id,\n            monitoring: r.monitoring,\n            min: r.min_intensity,\n            max: r.max_intensity,\n            about: [r.desc],\n            location: r.location,\n            currentValue: r.cur_intensity,\n            Graphlabel: r.desc,\n            graphName: r.desc,\n        })\n        if(r.monitoring){\n            getRangeData(r.id, this.props.duration, this.props.token).then(res=>{\n                console.log(res)\n                this.setState({\n                    init_data: res\n                })\n            })\n        }\n        this.setState({loading:false})\n        this.unlisten = this.props.history.listen((location, action) => {\n            //console.log(\"on route change \", location);\n            this.setState({loading:true})\n            let name = this.props.history.location.pathname.split(\"/\")\n            name = name[2]+\"/\"+name[3]\n            let r = getDataOf(name, this.props.devices);\n            if(r===null)\n            {\n                this.setState({error:true, err_msg:\"No such device!\"})\n                console.log(\"r is null\")\n                return\n            }\n            this.setState({\n                device_name: name,\n                device_id:r.id,\n                min: r.min_intensity,\n                max: r.max_intensity,\n                monitoring: r.monitoring,\n                about: [r.desc],\n                location: r.location,\n                currentValue: r.cur_intensity,\n                Graphlabel: r.desc,\n                graphName: r.desc,\n            })\n            if(r.monitoring){\n                getRangeData(r.id, this.props.duration, this.props.token).then(res=>{\n                    this.setState({\n                        init_data: res\n                    })\n                })\n            }\n            this.setState({loading:false})\n        });\n        \n    }\n\n\n    componentWillReceiveProps(nextProps){\n        //console.log(\"Recieve props\", nextProps);\n        this.setState({loading:true})\n        if(this.state.monitoring){\n            getRangeData(this.state.device_id, nextProps.duration, this.props.token).then(res=>{\n                console.log(res);\n                this.setState({\n                    init_data: res\n                })\n            })\n        }\n        \n        this.setState({loading:false})\n    }\n\n    componentWillMount(){\n        \n        \n    }\n\n    \n    render() {\n        //console.log(this.props.history.location.pathname)\n        //const device_name = this.props.history.location.pathname.split(\"/\")[2]\n        const {device_name, min, max, currentValue, about, graphName } = this.state;\n        const init_data = this.state.init_data;\n        console.log(\"INSIDE DEVICES MONTIT:: \", this.state.monitoring)\n        if(this.state.error){\n            return <Toast msg={this.state.err_msg}/>\n        }\n        if(!this.state.monitoring){\n            return (\n                <MDBContainer>\n                    <AboutCard about={about} name={this.state.device_name}/>\n                    <Box size=\"50px\" />\n                    <AboutCard about={[\"Monitoring is off for this device\"]} name={\"No chart available\"}/>\n                    <Box size=\"50px\" />\n                    <Range\n                    data = {{\n                        device: device_name,\n                        min: min,\n                        max: max,\n                        currentValue: currentValue\n                    }}\n                    />                    \n                </MDBContainer>\n            )\n        }\n        else{\n            return (\n                \n                <MDBContainer>\n                    <AboutCard about={about} name={this.state.device_name}/>\n                    <Box size=\"50px\" />\n                    \n                    <Row>\n                        <Col md={8} sm={1}>\n                        <h3>{graphName}</h3>\n                        </Col>\n                        <Col md={4} sm={11} >\n                        <Row>\n                            <Col className=\"text-right\">\n                            <DropMenu\n                                shortdurations={shortfrequency}\n                                longdurations={longfrequency}\n                                icon=\"retweet\"\n                                purpose=\"refresh rate\"\n                                data={this.props.freq}\n                            />\n                            </Col>\n                            <Col className=\"text-left\" >\n                            <DropMenu\n                            shortdurations={shortdurations}\n                            longdurations={longdurations}\n                            icon=\"clock\"\n                            purpose=\"duration\"\n                            data={this.props.duration}\n                            />\n                            </Col>\n                        </Row>\n                        \n                        </Col>\n                    </Row>\n                    {\n                        this.state.loading?<div className=\"text-center\"><Box size=\"75px\" /><Spin size=\"lg\" lastColor=\"dark\"/><p>Loading Chart . . .</p><Box size=\"75px\" /></div>:\n                        <div>\n                        <ChartsPage\n                        my_freq={parseInt(this.props.freq)}\n                        my_duration={parseInt(this.props.duration)}\n                        init_data={init_data}\n                        device_id={this.state.device_id}\n                        />\n                        <Box size=\"50px\" />\n                        <Range\n                        data = {{\n                            device: device_name,\n                            min: min,\n                            max: max,\n                            currentValue: currentValue\n                        }}\n                        />\n                        </div>\n                    }\n                    \n                </MDBContainer>\n            )\n        }\n    }\n}\n\n\nconst mapStateToProps = ({freq, duration, token, devices }) => ({\n    freq,\n    duration,\n    token,\n    devices,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    setFreq: (freq) => dispatch(setFreq(freq)),\n    setMyDuration: (duration) => dispatch(setMyDuration(duration)),\n  })\n  \n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Devices);","import React, { Component } from 'react'\nimport { CustomInput } from 'reactstrap';\nimport Spin from './../spinner/Spin';\nimport urls from './../../conf';\n\nimport { connect } from 'react-redux';\n\nvar base_url = urls.dev_url;\n\nclass Switch extends Component {\n    constructor(props){\n        super(props)\n        //console.log(\"DEBUG:: \", this.props.status)\n        let l = this.props.status ? \"ON\": \"OFF\";\n        this.state={\n            status: this.props.status,\n            label: l,\n            loading: false,\n            name: this.props.name          //this is actually device_id not name\n        }\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle(e){\n        let l = this.state.status ? \"OFF\": \"ON\";\n        this.setState({\n            loading:true\n        })\n\n        this.setState({\n            status: !this.state.status,\n            label: l\n        })\n        \n\n        // NETWORK CALL HERE..\n        // console.log(\"IN THE SWITCH:: \", this.state.name);\n        // console.log(\"IN SWITCH \", this.props.token);\n        // console.log(\"In the switch:: \", this.state.label);\n        let operation = this.state.label === \"ON\"? \"OFF\":\"ON\"\n        console.log(\"OPEARTION:: \", operation)\n        fetch(`${base_url}device/toggle`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n                \"device_name\": this.state.name,\n                \"token\": this.props.token,\n                \"operation\": operation\n            })\n        }).then(response => response.json()).then(resp => {\n            // console.log(resp.message)\n            if(resp.message===\"published\"){\n                // console.log(\"published\")\n            }\n            else{\n                let l = this.state.status ? \"OFF\": \"ON\";\n                this.setState({\n                    status: !this.state.status,\n                    label: l\n                })\n            }\n            this.setState({\n                loading:false\n            })\n        })    \n\n    }\n    render() {\n        return (\n            <div>\n                {\n                    !this.state.loading?\n                        <CustomInput \n                            color=\"dark\" \n                            checked={this.state.status} \n                            type=\"switch\" id={this.props.name} \n                            name=\"customSwitch\" \n                            label={this.state.label} \n                            onClick={this.toggle} \n                            onChange={()=>{console.log(\"changed\")}}\n                        />\n                    :\n                    <Spin size=\"sm\" lastColor=\"light\"/>\n                }\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({token }) => ({\n    token,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    \n  })\n  \n  \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Switch);","import React from 'react';\nimport { Table } from 'reactstrap';\nimport Switch from './../toggle/Switch';\nimport {Link} from 'react-router-dom';\n\nconst MyTable = (props) => {\n  return (\n    <Table dark responsive={true}>\n      <thead>\n        <tr>\n          <th className=\"text-center\">Name</th>\n          <th className=\"text-center\">Location</th>\n          <th className=\"text-center\">Status</th>\n        </tr>\n      </thead>\n      <tbody>\n          {\n              props.devices.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                        <td className=\"text-center\"><Link to={`/devices/${item.name}`}><span className=\"text-white\">{item.name}</span></Link></td>\n                        <td className=\"text-center\">{item.location}</td>\n                        <td className=\"text-center\"><Switch name={item.name} status={item.status}/></td>\n                    </tr>\n                  )\n              })\n          }\n        \n      </tbody>\n    </Table>\n  );\n}\n\nexport default MyTable;","import urls from './../../conf';\n\nvar base_url = urls.dev_url;\nexport default function getMyDevices(token){\n\n    return fetch(`${base_url}device?auth=${token}`)\n    .then(response=>{return response.json()})\n    .then(response=>{\n        return response.payload\n    })\n    \n}\n\n","import React, { Component } from 'react';\nimport Tables from './../components/tables/Tables';\nimport getMyDevices from './../_services/deviceService/getAllDevice';\n\nimport { connect } from 'react-redux';\nimport {setToken, logoutAction, setDevices} from './../actions';\nimport urls from './../conf';\n\nclass Dashbord extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            devices: []\n        }\n    }\n    componentDidMount(){\n        const token = this.props.token;\n        var base_url = urls.dev_url;\n        fetch(`${base_url}device?auth=${token}`)\n        .then(response=>{return response.json()})\n        .then(response=>{\n            this.props.setDevices(response.payload);\n            this.setState({devices: response.payload})\n            //return response.payload\n            console.log(response)\n        })\n        console.log(getMyDevices(this.props.token));\n    }\n    render() {\n        return (\n            <div style={{marginTop:\"-40px\"}}>\n                <h3 className=\"text-center\">All devices</h3>\n                <p className=\"text-left container\">Here is the list of devices connected to your home. Click on the name of the device if you want to monitor the device.</p>\n                <div className=\"container\">\n                    <Tables devices={this.state.devices}/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({isLoggedIn, token, devices }) => ({\n    isLoggedIn,\n    token,\n    devices\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    setToken: (token) => dispatch(setToken(token)),\n    logoutAction: () => dispatch(logoutAction()),\n    setDevices: (devices) => dispatch(setDevices(devices))\n  })\n  \n  \n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dashbord);\n","import React, { Component } from 'react'\nimport {Input, InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\nimport Spin from './../spinner/Spin';\n\n\nexport default class MyInput extends Component {\n    constructor(props){\n        super(props);\n        let n = this.props.name;\n        let i = this.props.id\n        this.state={\n            name:n,\n            loading: false,\n            id: i\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n\n        \n    }\n    handleChange(e){\n        e.preventDefault()\n        //console.log(e.target.name)\n        this.setState({name: e.target.value})\n    }\n    handleSave(e){\n        e.preventDefault()\n        let name = this.state.name;\n        console.log(\"Saving ... \", name);\n        this.setState({loading: true});\n        \n        //NETWORK CALL HERE ...\n\n        this.setState({loading: false});\n    }\n    render() {\n        return (\n            <InputGroup className=\"mb-3\">\n                \n                <Input type=\"text\"  value={this.state.name} name={this.props.name} onChange={this.handleChange} />\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                    {\n                        this.state.loading? \n                        <Spin size=\"sm\" ></Spin>:\n                        <i class=\"fas fa-save\" onClick={this.handleSave}></i>\n                    }\n                    \n                    </InputGroupText>\n                </InputGroupAddon>\n            </InputGroup>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\nimport MyInput from './../input/MyInput';\n\n\n\nclass EditTable extends Component{\n    constructor(props){\n        super(props)\n        \n    }\n\n    \n\n\n    render(){\n        return (\n            <Table dark responsive={true}>\n              <thead>\n                <tr>\n                  <th className=\"text-center\">Name</th>\n                  <th className=\"text-center\">Port no</th>\n                </tr>\n              </thead>\n              <tbody>\n                  {\n                      this.props.devices.map((item, index) => {\n                          return (\n                            <tr key={index}>\n                                <td className=\"text-center\" onClick={this.handleEdit} name={item.name}>\n                                    <div style={{paddingLeft:\"10px\", paddingRight:\"10px\"}}><MyInput name={item.name} id={item.id}/></div>\n                                </td>\n                                <td className=\"text-center\">{item.port}</td>\n                            </tr>\n                          )\n                      })\n                  }\n                \n              </tbody>\n            </Table>\n          );\n    }\n  \n}\n\nexport default EditTable;","import React, { Component } from 'react';\nimport EditTable from './../components/tables/editTable';\nimport getMyDevices from './../_services/deviceService/getAllDevice';\n\nexport default class EditDashbord extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            devices: getMyDevices()\n        }\n    }\n    render() {\n        return (\n            <div style={{marginTop:\"-40px\"}}>\n                <h3 className=\"text-center\">All devices</h3>\n                <p className=\"text-left container\">Here is the list of devices connected to your home. Click on the name of the device if you want to monitor the device.</p>\n                <div className=\"container\">\n                    <EditTable devices={this.state.devices}/>\n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./_services/userService/auth\";\n\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n            //alert(\"Not Allowed, Sign In Please\")\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./_services/userService/auth\";\n\nexport const UnProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n            //alert(\"Already sign in, Logout first\")\n          return (\n            <Redirect\n              to={{\n                pathname: \"/dashbord\",\n                state: {\n                  from: props.location\n                }\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};","import React, { Component} from 'react';\nimport './App.css';\n\nimport Login from './components/pages/Login';\n\nimport NavBar from './components/pages/NavBar';\nimport Footer from './components/pages/Footer';\n\n\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Devices from './layouts/Devices';\nimport Dashbord from './layouts/Dashbord';\nimport EditDashbord from './layouts/EditDash';\nimport {ProtectedRoute} from './protectedRoute';\nimport {UnProtectedRoute} from './unProtectedRoute';\n\n\nimport { connect } from 'react-redux';\nimport {setToken, logoutAction} from './actions';\nimport auth from './_services/userService/auth';\n\n\nclass App extends Component {\n  \n  componentDidMount(){\n    try {\n      const token =window.localStorage.token;\n      if(typeof token !== \"undefined\")\n      {\n        this.props.setToken(token);\n        auth.login(() => {\n          this.props.history.push(\"/dashbord/\");\n        });\n      }\n      \n    } catch (error) {\n      console.log(error.toString());\n    }\n    \n  }\n  \n  render() {\n    console.log(this.props)\n    return (\n      <BrowserRouter >\n          <Route path=\"*\" component={NavBar}></Route>\n          <UnProtectedRoute exact path=\"/\" component={Login}></UnProtectedRoute>\n          <UnProtectedRoute path=\"/login\" component={Login}></UnProtectedRoute>\n          <ProtectedRoute path=\"/devices\" component={Devices}></ProtectedRoute>\n          <ProtectedRoute path=\"/dashbord\" component={Dashbord}></ProtectedRoute>\n          <ProtectedRoute path=\"/editDevices\" component={EditDashbord}></ProtectedRoute>\n        <Footer/>\n        \n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = ({isLoggedIn, token }) => ({\n  isLoggedIn,\n  token\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (token) => dispatch(setToken(token)),\n  logoutAction: () => dispatch(logoutAction())\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//IMPORT ALL REDUCERS\nimport {combineReducers} from 'redux';\n\n\nconst loggedinReducer = (state=false, action) => {\n    switch(action.type){\n        case \"LOGIN\":\n            return true;  \n        case \"LOGOUT\":\n            return false;\n        default:\n            return state;\n    }\n}\n\nconst loginReducer = (state=null, action) => {\n    //console.log(\"USER REDUCER CALL \", action.type, \" \", USER.LOAD_SUCCESS);\n    if (action.type === 'LOGIN'){\n        return action.token;\n    }\n    else if (action.type === 'LOGOUT'){\n        return null\n    }\n    return state;\n}\n\nconst deviceReducer = (state=[], action) => {\n    if (action.type === 'DEVICE')\n    {\n        return action.device\n    }\n    return state\n}\n\nconst freqReducer = (state=\"5 s\", action) => {\n    switch(action.type){\n        case \"FREQ\":\n            return action.freq;\n        default:\n            return state;\n    }\n}\n\nconst durationReducer = (state=\"24h\", action) => {\n    switch(action.type){\n        case \"DURATION\":\n            return action.duration;\n        default:\n            return state;\n    }\n}\n\n\n\nconst allReducers = combineReducers({\n    //list of all reducers here\n    isLoggedIn: loggedinReducer,\n    freq: freqReducer,\n    duration: durationReducer,\n    token: loginReducer,\n    devices: deviceReducer\n})\n\nexport default allReducers;","import { all } from 'redux-saga/effects';\n\n\nexport default function* rootSaga(){\n    yield all([]);\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport allReducers from './../reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSage from './../sagas'\n\nconst configStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const store = createStore(\n        allReducers,\n        compose(\n            applyMiddleware(sagaMiddleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        ),\n    );\n    sagaMiddleware.run(rootSage);\n    return store;\n}\n\nexport default configStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport configStore from './store';\n\n\nconst store = configStore();\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n//ReactDOM.render(<div style={{overflowX: \"hidden\", position: \"relative\", width:\"100%\"}}><App /></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store;"],"sourceRoot":""}